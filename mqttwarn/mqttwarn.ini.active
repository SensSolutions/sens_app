[defaults]
hostname     = '84.88.95.122'  ; default
port         = 1883
username     = None
password     = None
clientid     = 'mqttwarn'
lwt	     = 'clients/mqttwarn'
skipretained = False
cleansession = False

# MQTTv31 = 3   (default)
# MQTTv311 = 4
protocol     = 3

; logging
logformat = '%(asctime)-15s %(levelname)-5s [%(module)s] %(message)s'
logfile	  = 'mqttwarn.log'

; one of: CRITICAL, DEBUG, ERROR, INFO, WARN
loglevel     = DEBUG

; path to file containing self-defined functions for formatmap and datamap
; omit the '.py' extension
;functions = 'samplefuncs''
functions = 'topicdatamap'

; name the service providers you will be using.
launch	 = file, log, mysql, pushover

[config:file]
append_newline = True
targets = {
    'f01'       : ['/tmp/f.01'],
    'log-me'    : ['/tmp/log.me'],
    'mqttwarn'  : ['/tmp/mqttwarn.err'],
    'estudi'	: ['/tmp/estudi.log'],
    'sens.solutions' : ['/tmp/sens.solutions_pool.log'],
    'temperature' : ['/tmp/temperature.log'],
    }
    
[config:log]
targets = {
    'info'   : [ 'info' ],
    'warn'   : [ 'warn' ],
    'crit'   : [ 'crit' ],
    'error'  : [ 'error' ]
  }

[config:mysql]
host = 'localhost'
port = 3306
user = 'mqtt'
pass = ''
dbname = 'mqtt'
targets = { 'data' : [ 'data', 'payload' ] }
 
[config:pushover]
targets = {
;    'alerts'     : ['userkey2', 'appkey2'],
;    'tracking'   : ['userkey1', 'appkey2'],
;    'extraphone' : ['userkey2', 'appkey3']
    }

; special config for 'failover' events
[failover]
targets = log:error, file:mqttwarn

[hello/1]
targets = log:info
format = u'{name}: {number} => {_dthhmmss}'

[estudi]
topic   = estudi/+/+
targets = file:estudi
format  = u'{name}: {number} => {_dthhmmss}'

[sens.solutions/pool/sensors/air]
topic   = sens.solutions/pool/sensors/air/+
datamap = Topic2Data()
targets = file:sens.solutions, mysql:data
format  = {payload}

[sens.solutions-temperature]
topic   = sens.solutions/pool/sensors/air/temperature
title   = {place}@{org} is on fire
sound   = cashregister
targets = file:temperature, pushover:sens.mcollado
filter  = TempFilter()
format  = Is getting hot at {place}@{org}. Temp = {value} C : {_dthhmmss}

;[owntracks-location]
;topic = owntracks/+/+
;targets = log:info, file:f01
;datamap = OwnTracksTopic2Data()
;format  = OwnTracksConvert()
;
;[owntracks-battery]
;topic = owntracks/+/+
;targets = log:info, file:f01
;datamap = OwnTracksTopic2Data()
;filter  = OwnTracksBattFilter()
;format  = {username}'s phone battery is getting low ({batt}%)
